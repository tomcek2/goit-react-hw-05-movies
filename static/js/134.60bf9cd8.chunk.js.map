{"version":3,"file":"static/js/134.60bf9cd8.chunk.js","mappings":"2cAGaA,EAAOC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0HAQjBC,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,oKAUvBI,EAAQN,EAAAA,GAAAA,EAAQO,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+DAKhBM,EAAYR,EAAAA,GAAAA,MAAYS,IAAAA,GAAAP,EAAAA,EAAAA,GAAA,wGAOxBQ,EAAaV,EAAAA,GAAAA,OAAaW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,wCAI1BU,EAAYZ,EAAAA,GAAAA,IAAUa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,qHAOtBY,GAAWd,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYe,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,yEAMvBc,EAAShB,EAAAA,GAAAA,IAAUiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,0CAKnBgB,EAAUlB,EAAAA,GAAAA,GAASmB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,4HASnBkB,EAAWpB,EAAAA,GAAAA,GAASqB,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,4CAMpBoB,EAAStB,EAAAA,GAAAA,GAASuB,IAAAA,GAAArB,EAAAA,EAAAA,GAAA,gE,sFCjEzBsB,GAAoBC,EAAAA,EAAAA,OAAK,kBAAM,oDAAyC,IAkD9E,UAhDe,WACb,IAAAC,GAAoCC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAzCI,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAChCI,GAAoCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA5CE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAC1BG,GAAWC,EAAAA,EAAAA,UACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAX,EAAAA,EAAAA,GAAAS,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,IAEpCG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAcH,EAAaI,IAAI,UAEjCD,GAAeA,IAAgBd,IACjCC,EAAca,GACdT,GAAc,GAElB,GAAG,IAkBH,OACEW,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,SANW,SAAAC,GACnBA,EAAEC,gBACJ,EAIiCH,SAAA,EAC3BI,EAAAA,EAAAA,KAAC5C,EAAAA,GAAS,CACR6C,KAAK,OACLC,IAAKlB,EACLmB,YAAY,uBAEdH,EAAAA,EAAAA,KAAC1C,EAAAA,GAAU,CAAC8C,QAAS,kBAxBN,WACnB,IAAMC,EAAWrB,EAASsB,QAAQC,MAAMC,OAEpCH,EAASI,OAAS,GAAKJ,IAAa3B,GACtCC,EAAc0B,GACdtB,GAAc,GACdO,EAAgB,CAAEoB,OAAQL,KAE1BtB,GAAc,EAElB,CAciC4B,EAAc,EAACf,SAAC,eAE7CI,EAAAA,EAAAA,KAACY,EAAAA,SAAQ,CAACC,UAAUb,EAAAA,EAAAA,KAACc,EAAAA,EAAM,IAAIlB,SAC5Bd,IAAckB,EAAAA,EAAAA,KAAC5B,EAAiB,CAAC2C,MAAOrC,QAIjD,C","sources":["components/Styles.styled.js","pages/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.div`\n  list-style-type: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-around;\n  gap: 30px;\n`;\n\nexport const ListLink = styled(Link)`\n  display: flex;\n  flex-direction: column;\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n`;\n\nexport const Title = styled.p`\n  inline-size: 200px;\n  overflow-wrap: break-word;\n`;\n\nexport const FormInput = styled.input`\n  border: 3px solid #000000;\n  margin-left: 20px;\n  margin-top: 10px;\n  min-width: 300px;\n`;\n\nexport const FormButton = styled.button`\n  border: 3px solid #000000;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 0 20px;\n  gap: 20px;\n  border-bottom: 3px solid rgba(151, 151, 151, 0.31);\n`;\n\nexport const BackLink = styled(Link)`\n  font-size: 12px;\n  text-decoration: none;\n  color: black;\n`;\n\nexport const Genres = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AddInfo = styled.ul`\n  border-bottom: 3px solid rgba(151, 151, 151, 0.31);\n  padding-bottom: 15px;\n\n  > h3 {\n    margin 5px;\n  }\n`;\n\nexport const CastList = styled.li`\n  > p {\n    margin: 5px 0;\n  }\n`;\n\nexport const Review = styled.li`\n  border-bottom: 3px solid rgba(151, 151, 151, 0.31);\n`;\n","import React, { useRef, useState, useEffect, Suspense, lazy } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { FormInput, FormButton } from 'components/Styles.styled';\nimport { Loader } from 'components/Loader';\n\nconst MovieResponseList = lazy(() => import('../components/MovieResponseList'));\n\nconst Movies = () => {\n  const [movieTitle, setMovieTitle] = useState('');\n  const [isResponse, setIsResponse] = useState(false);\n  const inputRef = useRef();\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const searchTitle = searchParams.get('search');\n\n    if (searchTitle && searchTitle !== movieTitle) {\n      setMovieTitle(searchTitle);\n      setIsResponse(true);\n    }\n  }, []); // eslint-disable-line\n\n  const handleSearch = () => {\n    const newTitle = inputRef.current.value.trim();\n\n    if (newTitle.length > 0 && newTitle !== movieTitle) {\n      setMovieTitle(newTitle);\n      setIsResponse(true);\n      setSearchParams({ search: newTitle });\n    } else {\n      setIsResponse(false);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          ref={inputRef}\n          placeholder=\"Enter Movie Title\"\n        ></FormInput>\n        <FormButton onClick={() => handleSearch()}>Search</FormButton>\n      </form>\n      <Suspense fallback={<Loader />}>\n        {isResponse && <MovieResponseList title={movieTitle} />}\n      </Suspense>\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","ListLink","Link","_templateObject2","Title","_templateObject3","FormInput","_templateObject4","FormButton","_templateObject5","Container","_templateObject6","BackLink","_templateObject7","Genres","_templateObject8","AddInfo","_templateObject9","CastList","_templateObject10","Review","_templateObject11","MovieResponseList","lazy","_useState","useState","_useState2","_slicedToArray","movieTitle","setMovieTitle","_useState3","_useState4","isResponse","setIsResponse","inputRef","useRef","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","useEffect","searchTitle","get","_jsxs","_Fragment","children","onSubmit","e","preventDefault","_jsx","type","ref","placeholder","onClick","newTitle","current","value","trim","length","search","handleSearch","Suspense","fallback","Loader","title"],"sourceRoot":""}